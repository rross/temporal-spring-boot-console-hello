plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.13'
    id "net.ltgt.errorprone" version "3.1.0"
}

group = 'io.temporal.springboot.example'
// version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

ext {
    javaSDKVersion = '1.22.3'
    lombokVersion = '1.18.30'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "io.temporal:temporal-spring-boot-starter-alpha:$javaSDKVersion"
    implementation 'org.apache.commons:commons-lang3:3.14.0'
    compileOnly "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    dependencies {
        errorproneJavac('com.google.errorprone:javac:9+181-r4173-1')
        errorprone('com.google.errorprone:error_prone_core:2.23.0')
    }
}

bootJar {
    mainClass = 'io.temporal.springboot.example.hello.StartTheWorker'
    enabled = true
}

bootRun {
    mainClass = 'io.temporal.springboot.example.hello.StartTheWorker'
    enabled = true
}

jar {
    enabled = false
}

tasks.named('test') {
    useJUnitPlatform()
}

task(runWorker, dependsOn: 'classes', type: JavaExec) {
    mainClass = 'io.temporal.springboot.example.hello.StartTheWorker'
    classpath = sourceSets.main.runtimeClasspath
}

task(startWorkflow, dependsOn: 'classes', type: JavaExec) {
    mainClass = 'io.temporal.springboot.example.workflowstarter.StartTheWorkflow'
    classpath = sourceSets.main.runtimeClasspath
}
